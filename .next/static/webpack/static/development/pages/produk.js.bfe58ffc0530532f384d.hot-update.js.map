{"version":3,"file":"static/webpack/static\\development\\pages\\produk.js.bfe58ffc0530532f384d.hot-update.js","sources":["webpack:///./pages/produk.js"],"sourcesContent":["import Layout from \"../components/layout/Layout\";\r\nimport styled from \"styled-components\";\r\nimport dynamic from \"next/dynamic\";\r\nimport Post from \"../components/products/Post\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst LazyImage = dynamic(() => import(\"../components/utils/lazy-image\"), {\r\n  ssr: false\r\n});\r\n\r\nconst Root = styled.div`\r\n  max-width: 90vw;\r\n  margin: 3.5rem auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 2.5rem;\r\n\r\n  @media (max-width: 70rem) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 50rem) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n\r\nconst client = require(\"contentful\").createClient({\r\n  space: \"pwqt3c72vj9v\",\r\n  accessToken: \"mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\"\r\n});\r\n\r\nfunction Produk() {\r\n  async function fetchContentTypes() {\r\n    const types = await client.getContentTypes();\r\n    if (types.items) return types.items;\r\n    console.log(\"Error getting Content Types.\");\r\n  }\r\n\r\n  async function fetchEntriesForContentType(contentType) {\r\n    const entries = await client.getEntries({\r\n      content_type: contentType.sys.id\r\n    });\r\n    if (entries.items) return entries.items;\r\n    console.log(`Error getting Entries for ${contentType.name}.`);\r\n  }\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      const contentTypes = await fetchContentTypes();\r\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\r\n      setPosts([...allPosts]);\r\n    }\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Root>\r\n          {posts.length > 0\r\n            ? posts.map(p => (\r\n                <Post\r\n                  alt={p.fields.alt}\r\n                  key={p.fields.title}\r\n                  media={p.fields.media.fields.file.url}\r\n                  title={p.fields.title}\r\n                  description={p.fields.description}\r\n                />\r\n              ))\r\n            : null}\r\n        </Root>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Produk;\r\n\r\n// class Produk extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <Layout pageTitle=\"Produk Kami\">\r\n//           <Root>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model1.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model2.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model3.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model4.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model5.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model9.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//           </Root>\r\n//         </Layout>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Produk;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAeA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AAKA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}