{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4a7075f4759ae9fda9b5.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/layout/Layout\";\r\n// import Products from \"../components/products/Grid\";\r\nimport Post from \"../components/products/Post\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\n// CONTENTFUL_SPACE_ID=pwqt3c72vj9v\r\n// CONTENTFUL_ACCESS_TOKEN=mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\r\n\r\n// space: process.env.SPACE_ID,\r\n// accessToken: process.env.ACCESS_TOKEN\r\n\r\nconst client = require(\"contentful\").createClient({\r\n  space: \"pwqt3c72vj9v\",\r\n  accessToken: \"mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\"\r\n});\r\n\r\nconst Header = styled.header`\r\n  padding: 6.5rem 3.5rem 10rem 3.5rem;\r\n  background-image: linear-gradient(120deg, #00ccaa 0%, #8fd3f4 100%);\r\n\r\n  font-size: 1.1em;\r\n  color: #eee;\r\n\r\n  h1 {\r\n    color: #f9f9f9;\r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  max-width: 90vw;\r\n  margin: -5rem auto 5rem auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 2.5rem;\r\n\r\n  @media (max-width: 80rem) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (max-width: 40rem) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  max-width: 90rem;\r\n  margin: auto;\r\n  padding: 2.5rem 1.8rem;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  box-shadow: 3px 5px 10px rgba(0, 0, 0, 0.05);\r\n\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n  grid-column: 1/-1;\r\n`;\r\n\r\nfunction Home() {\r\n  async function fetchContentTypes() {\r\n    const types = await client.getContentTypes();\r\n    if (types.items) return types.items;\r\n    console.log(\"Error getting Content Types.\");\r\n  }\r\n\r\n  async function fetchEntriesForContentType(contentType) {\r\n    const entries = await client.getEntries({\r\n      content_type: contentType.sys.id\r\n    });\r\n\r\n    console.log(entries);\r\n\r\n    if (entries.items) return entries.items;\r\n    console.log(`Error getting Entries for ${contentType.name}.`);\r\n  }\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      const contentTypes = await fetchContentTypes();\r\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\r\n      setPosts([...allPosts]);\r\n    }\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <h1>Bandol Banyumas</h1>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </Header>\r\n        <Root>\r\n          {posts.length.slice(0, 2) > 0 ? (\r\n            posts.map(p => (\r\n              <Post\r\n                alt={p.fields.alt}\r\n                key={p.fields.title}\r\n                media={p.fields.media.fields.file.url}\r\n                title={p.fields.title}\r\n                description={p.fields.description}\r\n              />\r\n            ))\r\n          ) : (\r\n            <>\r\n              <Error>\r\n                Error showing the posts, please check your internet connection\r\n              </Error>\r\n            </>\r\n          )}\r\n        </Root>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAYA;AAiBA;AACA;AAaA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AACA;AAIA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAQA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAmBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AAKA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}