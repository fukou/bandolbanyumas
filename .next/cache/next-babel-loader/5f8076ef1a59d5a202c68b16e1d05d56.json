{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\bandolbanyumas\\\\pages\\\\produk.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: 90vw;\\n  margin: 3.5rem auto;\\n  display: grid;\\n  grid-template-columns: repeat(4, 1fr);\\n  grid-gap: 2.5rem;\\n\\n  @media (max-width: 70rem) {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n\\n  @media (max-width: 50rem) {\\n    grid-template-columns: repeat(1, 1fr);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../components/layout/Layout\";\nimport styled from \"styled-components\";\nimport dynamic from \"next/dynamic\";\nimport Post from \"../components/products/Post\";\nimport { useEffect, useState } from \"react\";\nvar LazyImage = dynamic(function () {\n  return import(\"../components/utils/lazy-image\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"../components/utils/lazy-image\")];\n    },\n    modules: [\"../components/utils/lazy-image\"]\n  }\n});\nvar Root = styled.div(_templateObject());\n\nvar client = require(\"contentful\").createClient({\n  space: \"pwqt3c72vj9v\",\n  accessToken: \"mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\"\n});\n\nfunction Produk() {\n  function fetchContentTypes() {\n    return _fetchContentTypes.apply(this, arguments);\n  }\n\n  function _fetchContentTypes() {\n    _fetchContentTypes = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var types;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.getContentTypes();\n\n            case 2:\n              types = _context2.sent;\n\n              if (!types.items) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", types.items);\n\n            case 5:\n              console.log(\"Error getting Content Types.\");\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchContentTypes.apply(this, arguments);\n  }\n\n  function fetchEntriesForContentType(_x) {\n    return _fetchEntriesForContentType.apply(this, arguments);\n  }\n\n  function _fetchEntriesForContentType() {\n    _fetchEntriesForContentType = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(contentType) {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.getEntries({\n                content_type: contentType.sys.id\n              });\n\n            case 2:\n              entries = _context3.sent;\n\n              if (!entries.items) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchEntriesForContentType.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    function getPosts() {\n      return _getPosts.apply(this, arguments);\n    }\n\n    function _getPosts() {\n      _getPosts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var contentTypes, allPosts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchContentTypes();\n\n              case 2:\n                contentTypes = _context.sent;\n                _context.next = 5;\n                return fetchEntriesForContentType(contentTypes[0]);\n\n              case 5:\n                allPosts = _context.sent;\n                setPosts(_toConsumableArray(allPosts));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPosts.apply(this, arguments);\n    }\n\n    getPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Root, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, posts.length > 0 ? posts.map(function (p) {\n    return __jsx(Post, {\n      alt: p.fields.alt,\n      key: p.fields.title,\n      media: p.fields.media.fields.file.url,\n      title: p.fields.title,\n      description: p.fields.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }) : null)));\n}\n\nexport default Produk; // class Produk extends React.Component {\n//   render() {\n//     return (\n//       <>\n//         <Layout pageTitle=\"Produk Kami\">\n//           <Root>\n//             <Grid>\n//               <LazyImage\n//                 srcset=\"/img/model1.png\"\n//                 src=\"/img/model1.png\"\n//                 alt=\"Product\"\n//               />\n//             </Grid>\n//             <Grid>\n//               <LazyImage\n//                 srcset=\"/img/model2.png\"\n//                 src=\"/img/model1.png\"\n//                 alt=\"Product\"\n//               />\n//             </Grid>\n//             <Grid>\n//               <LazyImage\n//                 srcset=\"/img/model3.png\"\n//                 src=\"/img/model1.png\"\n//                 alt=\"Product\"\n//               />\n//             </Grid>\n//             <Grid>\n//               <LazyImage\n//                 srcset=\"/img/model4.png\"\n//                 src=\"/img/model1.png\"\n//                 alt=\"Product\"\n//               />\n//             </Grid>\n//             <Grid>\n//               <LazyImage\n//                 srcset=\"/img/model5.png\"\n//                 src=\"/img/model1.png\"\n//                 alt=\"Product\"\n//               />\n//             </Grid>\n//             <Grid>\n//               <LazyImage\n//                 srcset=\"/img/model9.png\"\n//                 src=\"/img/model1.png\"\n//                 alt=\"Product\"\n//               />\n//             </Grid>\n//           </Root>\n//         </Layout>\n//       </>\n//     );\n//   }\n// }\n// export default Produk;","map":{"version":3,"sources":["C:/Users/Asus/bandolbanyumas/pages/produk.js"],"names":["Layout","styled","dynamic","Post","useEffect","useState","LazyImage","ssr","Root","div","client","require","createClient","space","accessToken","Produk","fetchContentTypes","getContentTypes","types","items","console","log","fetchEntriesForContentType","contentType","getEntries","content_type","sys","id","entries","name","posts","setPosts","getPosts","contentTypes","allPosts","length","map","p","fields","alt","title","media","file","url","description"],"mappings":"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","sourcesContent":["import Layout from \"../components/layout/Layout\";\r\nimport styled from \"styled-components\";\r\nimport dynamic from \"next/dynamic\";\r\nimport Post from \"../components/products/Post\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst LazyImage = dynamic(() => import(\"../components/utils/lazy-image\"), {\r\n  ssr: false\r\n});\r\n\r\nconst Root = styled.div`\r\n  max-width: 90vw;\r\n  margin: 3.5rem auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 2.5rem;\r\n\r\n  @media (max-width: 70rem) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 50rem) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n\r\nconst client = require(\"contentful\").createClient({\r\n  space: \"pwqt3c72vj9v\",\r\n  accessToken: \"mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\"\r\n});\r\n\r\nfunction Produk() {\r\n  async function fetchContentTypes() {\r\n    const types = await client.getContentTypes();\r\n    if (types.items) return types.items;\r\n    console.log(\"Error getting Content Types.\");\r\n  }\r\n\r\n  async function fetchEntriesForContentType(contentType) {\r\n    const entries = await client.getEntries({\r\n      content_type: contentType.sys.id\r\n    });\r\n    if (entries.items) return entries.items;\r\n    console.log(`Error getting Entries for ${contentType.name}.`);\r\n  }\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      const contentTypes = await fetchContentTypes();\r\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\r\n      setPosts([...allPosts]);\r\n    }\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Root>\r\n          {posts.length > 0\r\n            ? posts.map(p => (\r\n                <Post\r\n                  alt={p.fields.alt}\r\n                  key={p.fields.title}\r\n                  media={p.fields.media.fields.file.url}\r\n                  title={p.fields.title}\r\n                  description={p.fields.description}\r\n                />\r\n              ))\r\n            : null}\r\n        </Root>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Produk;\r\n\r\n// class Produk extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <Layout pageTitle=\"Produk Kami\">\r\n//           <Root>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model1.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model2.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model3.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model4.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model5.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//             <Grid>\r\n//               <LazyImage\r\n//                 srcset=\"/img/model9.png\"\r\n//                 src=\"/img/model1.png\"\r\n//                 alt=\"Product\"\r\n//               />\r\n//             </Grid>\r\n//           </Root>\r\n//         </Layout>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Produk;\r\n"]},"metadata":{},"sourceType":"module"}