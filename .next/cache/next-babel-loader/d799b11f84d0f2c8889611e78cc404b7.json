{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Asus\\\\bandolbanyumas\\\\components\\\\utils\\\\lazy-image.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport LazyLoad from \"vanilla-lazyload\";\nimport lazyloadConfig from \"./config/lazyload\"; // Only initialize it one time for the entire application\n\nif (!document.lazyLoadInstance) {\n  document.lazyLoadInstance = new LazyLoad(lazyloadConfig);\n}\n\nexport var LazyImage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LazyImage, _React$Component);\n\n  function LazyImage() {\n    _classCallCheck(this, LazyImage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LazyImage).apply(this, arguments));\n  }\n\n  _createClass(LazyImage, [{\n    key: \"componentDidMount\",\n    // Update lazyLoad after first rendering of every image\n    value: function componentDidMount() {\n      document.lazyLoadInstance.update();\n    } // Update lazyLoad after rerendering of every image\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      document.lazyLoadInstance.update();\n    } // Just render the image with data-src\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          alt = _this$props.alt,\n          src = _this$props.src,\n          srcset = _this$props.srcset,\n          sizes = _this$props.sizes,\n          width = _this$props.width,\n          height = _this$props.height;\n      return __jsx(\"img\", {\n        alt: alt,\n        className: \"lazy\",\n        \"data-src\": src,\n        \"data-srcset\": srcset,\n        \"data-sizes\": sizes,\n        width: width,\n        height: height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LazyImage;\n}(React.Component);\nexport default LazyImage;","map":{"version":3,"sources":["C:/Users/Asus/bandolbanyumas/components/utils/lazy-image.js"],"names":["React","LazyLoad","lazyloadConfig","document","lazyLoadInstance","LazyImage","update","props","alt","src","srcset","sizes","width","height","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B,C,CAEA;;AACA,IAAI,CAACC,QAAQ,CAACC,gBAAd,EAAgC;AAC9BD,EAAAA,QAAQ,CAACC,gBAAT,GAA4B,IAAIH,QAAJ,CAAaC,cAAb,CAA5B;AACD;;AAED,WAAaG,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AACE;AADF,wCAEsB;AAClBF,MAAAA,QAAQ,CAACC,gBAAT,CAA0BE,MAA1B;AACD,KAJH,CAME;;AANF;AAAA;AAAA,yCAOuB;AACnBH,MAAAA,QAAQ,CAACC,gBAAT,CAA0BE,MAA1B;AACD,KATH,CAWE;;AAXF;AAAA;AAAA,6BAYW;AAAA,wBAC4C,KAAKC,KADjD;AAAA,UACCC,GADD,eACCA,GADD;AAAA,UACMC,GADN,eACMA,GADN;AAAA,UACWC,MADX,eACWA,MADX;AAAA,UACmBC,KADnB,eACmBA,KADnB;AAAA,UAC0BC,KAD1B,eAC0BA,KAD1B;AAAA,UACiCC,MADjC,eACiCA,MADjC;AAEP,aACE;AACE,QAAA,GAAG,EAAEL,GADP;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,oBAAUC,GAHZ;AAIE,uBAAaC,MAJf;AAKE,sBAAYC,KALd;AAME,QAAA,KAAK,EAAEC,KANT;AAOE,QAAA,MAAM,EAAEC,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;AAzBH;;AAAA;AAAA,EAA+Bb,KAAK,CAACc,SAArC;AA4BA,eAAeT,SAAf","sourcesContent":["import React from \"react\";\r\nimport LazyLoad from \"vanilla-lazyload\";\r\nimport lazyloadConfig from \"./config/lazyload\";\r\n\r\n// Only initialize it one time for the entire application\r\nif (!document.lazyLoadInstance) {\r\n  document.lazyLoadInstance = new LazyLoad(lazyloadConfig);\r\n}\r\n\r\nexport class LazyImage extends React.Component {\r\n  // Update lazyLoad after first rendering of every image\r\n  componentDidMount() {\r\n    document.lazyLoadInstance.update();\r\n  }\r\n\r\n  // Update lazyLoad after rerendering of every image\r\n  componentDidUpdate() {\r\n    document.lazyLoadInstance.update();\r\n  }\r\n\r\n  // Just render the image with data-src\r\n  render() {\r\n    const { alt, src, srcset, sizes, width, height } = this.props;\r\n    return (\r\n      <img\r\n        alt={alt}\r\n        className=\"lazy\"\r\n        data-src={src}\r\n        data-srcset={srcset}\r\n        data-sizes={sizes}\r\n        width={width}\r\n        height={height}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LazyImage;\r\n"]},"metadata":{},"sourceType":"module"}