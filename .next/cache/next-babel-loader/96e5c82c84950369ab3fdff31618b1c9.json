{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\bandolbanyumas\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout/Layout\"; // import Products from \"../components/products/Grid\";\n\nimport Post from \"../components/products/Post\";\nimport styled from \"styled-components\"; // CONTENTFUL_SPACE_ID=pwqt3c72vj9v\n// CONTENTFUL_ACCESS_TOKEN=mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\n// space: process.env.SPACE_ID,\n// accessToken: process.env.ACCESS_TOKEN\n\nconst client = require(\"contentful\").createClient({\n  space: \"pwqt3c72vj9v\",\n  accessToken: \"mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\"\n});\n\nconst Header = styled.header`\n  padding: 6.5rem 3.5rem 10rem 3.5rem;\n  background-image: linear-gradient(120deg, #00ccaa 0%, #8fd3f4 100%);\n\n  font-size: 1.1em;\n  color: #eee;\n\n  h1 {\n    color: #f9f9f9;\n  }\n`;\nconst Root = styled.div`\n  max-width: 90vw;\n  margin: -5rem auto 5rem auto;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 2.5rem;\n\n  @media (max-width: 80rem) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (max-width: 40rem) {\n    grid-template-columns: 1fr;\n    grid-gap: 1.5rem;\n  }\n`;\nconst Error = styled.div`\n  max-width: 90rem;\n  margin: auto;\n  padding: 1.5rem 1.8rem;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #fff;\n  box-shadow: 3px 5px 10px rgba(0, 0, 0, 0.05);\n\n  font-size: 2em;\n  font-weight: bold;\n  grid-column: 1/-1;\n`;\n\nfunction Home() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes();\n    if (types.items) return types.items;\n    console.log(\"Error getting Content Types.\");\n  }\n\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    });\n    console.log(entries);\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  useEffect(() => {\n    async function getPosts() {\n      const contentTypes = await fetchContentTypes();\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\n      setPosts([...allPosts]);\n    }\n\n    getPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Bandol Banyumas\"), \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"), __jsx(Root, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, posts.length > 0 ? posts.map(p => __jsx(Post, {\n    alt: p.fields.alt,\n    key: p.fields.title,\n    media: p.fields.media.fields.file.url,\n    title: p.fields.title,\n    description: p.fields.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })) : __jsx(React.Fragment, null, __jsx(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Error showing the posts, please check your internet connection\")))));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Asus/bandolbanyumas/pages/index.js"],"names":["React","useEffect","useState","Layout","Post","styled","client","require","createClient","space","accessToken","Header","header","Root","div","Error","Home","fetchContentTypes","types","getContentTypes","items","console","log","fetchEntriesForContentType","contentType","entries","getEntries","content_type","sys","id","name","posts","setPosts","getPosts","contentTypes","allPosts","length","map","p","fields","alt","title","media","file","url","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/layout/Layout\";\r\n// import Products from \"../components/products/Grid\";\r\nimport Post from \"../components/products/Post\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\n// CONTENTFUL_SPACE_ID=pwqt3c72vj9v\r\n// CONTENTFUL_ACCESS_TOKEN=mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\r\n\r\n// space: process.env.SPACE_ID,\r\n// accessToken: process.env.ACCESS_TOKEN\r\n\r\nconst client = require(\"contentful\").createClient({\r\n  space: \"pwqt3c72vj9v\",\r\n  accessToken: \"mTty2H7ONePrpF8kxIfq0RjxMmrUp2CVBdiRMlqlVL0\"\r\n});\r\n\r\nconst Header = styled.header`\r\n  padding: 6.5rem 3.5rem 10rem 3.5rem;\r\n  background-image: linear-gradient(120deg, #00ccaa 0%, #8fd3f4 100%);\r\n\r\n  font-size: 1.1em;\r\n  color: #eee;\r\n\r\n  h1 {\r\n    color: #f9f9f9;\r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  max-width: 90vw;\r\n  margin: -5rem auto 5rem auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 2.5rem;\r\n\r\n  @media (max-width: 80rem) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  @media (max-width: 40rem) {\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst Error = styled.div`\r\n  max-width: 90rem;\r\n  margin: auto;\r\n  padding: 1.5rem 1.8rem;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #fff;\r\n  box-shadow: 3px 5px 10px rgba(0, 0, 0, 0.05);\r\n\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n  grid-column: 1/-1;\r\n`;\r\n\r\nfunction Home() {\r\n  async function fetchContentTypes() {\r\n    const types = await client.getContentTypes();\r\n    if (types.items) return types.items;\r\n    console.log(\"Error getting Content Types.\");\r\n  }\r\n\r\n  async function fetchEntriesForContentType(contentType) {\r\n    const entries = await client.getEntries({\r\n      content_type: contentType.sys.id\r\n    });\r\n\r\n    console.log(entries);\r\n\r\n    if (entries.items) return entries.items;\r\n    console.log(`Error getting Entries for ${contentType.name}.`);\r\n  }\r\n\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      const contentTypes = await fetchContentTypes();\r\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\r\n      setPosts([...allPosts]);\r\n    }\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Header>\r\n          <h1>Bandol Banyumas</h1>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </Header>\r\n        <Root>\r\n          {posts.length > 0 ? (\r\n            posts.map(p => (\r\n              <Post\r\n                alt={p.fields.alt}\r\n                key={p.fields.title}\r\n                media={p.fields.media.fields.file.url}\r\n                title={p.fields.title}\r\n                description={p.fields.description}\r\n              />\r\n            ))\r\n          ) : (\r\n            <>\r\n              <Error>\r\n                Error showing the posts, please check your internet connection\r\n              </Error>\r\n            </>\r\n          )}\r\n        </Root>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}